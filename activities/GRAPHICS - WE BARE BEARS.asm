org 100h

.model small

.stack 100h

.data

	blackx	db 21,23 ;2
			db 25,26,27,28,33,34 ;6
			db 25,26,27,28,29,33,34 ;7
			db 20,26,27,28,29,30,33,34,35,35,36,40 ;12
			db 2,22,26,27,28,29,30,33,34,35,35,36,42 ;13
			db 4,19,26,27,28,29,30,33,34,35,35,36,39 ;13
			db 2,26,27,28,29,30,33,34 ;8
			db 26,27,28,29,30,33,34 ;7
			db 25,26,27,28,29,33,34 ;7
			db 24,25,26,27,28,32,33,34 ;8
			db 24,25,26,27,31,32,33 ;7
			db 24,25,26,30,31,32 ;6
			db 24,25,26,30,31,32 ;6
			db 24,25,26,30,31,32 ;6
			;cx 108

	blacky	db 0,0
			db 1,1,1,1,1,1
			db 2,2,2,2,2,2,2
			db 3,3,3,3,3,3,3,3,3,3,3,3
			db 4,4,4,4,4,4,4,4,4,4,4,4,4
			db 5,5,5,5,5,5,5,5,5,5,5,5,5
			db 6,6,6,6,6,6,6,6
			db 7,7,7,7,7,7,7
			db 8,8,8,8,8,8,8
			db 9,9,9,9,9,9,9,9
			db 10,10,10,10,10,10,10
			db 11,11,11,11,11,11
			db 12,12,12,12,12,12
			db 13,13,13,13,13,13
			
	brownx	db 3,5	;2
			db 3,4,5,6,7,8,9,10,11,12,13,14 ;12
			db 2,3,4,5,6,7,8,9,10,11,12,13,14,15 ;14
			db 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17 ;17
			db 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17 ;18
			db 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17 ;18
			db 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 ;16
			db 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 ;16
			db 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 ;15
			db 2,3,4,5,6,7,8,9,10,11,12,13,14,15 ;14
			db 3,4,5,6,7,8,9,10,11,12,13,14 ;12
			db 5,6,7,8,9,10,11,12,13,14 ;10
			db 5,6,7,11,12,13 ;6
			;cx170

	browny	db 1,1
			db 2,2,2,2,2,2,2,2,2,2,2,2
			db 3,3,3,3,3,3,3,3,3,3,3,3,3,3
			db 4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
			db 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
			db 6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6
			db 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
			db 8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8
			db 9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
			db 10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db 11,11,11,11,11,11,11,11,11,11,11,11
			db 12,12,12,12,12,12,12,12,12,12
			db 13,13,13,13,13,13
			
			
	whitex	db 41,43 ;2
			db 21,22,23,24,29,30,31,32,41,42,43,44,45,46,47,48,49,50,51,52,53 ;21
			db 20,21,22,23,24,30,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54  ;23
			db 19,21,22,23,24,25,31,32,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57 ;26
			db 19,20,21,23,24,25,31,32,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57 ;26
			db 20,21,22,23,24,25,31,32,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57 ;26
			db 19,20,21,22,23,24,25,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55 ;26
			db 19,20,21,22,23,24,25,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55 ;26
            db 20,21,22,23,24, 30,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55 ;24
			db 21,22,23, 29,30,31,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55 ;22
			db 22,23, 28,29,30,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55 ;20
			db 27,28,29,42,43,44,45,46,47,48,49,50,51,52,53,54 ;16
			db 44,45,46,51,52,53 ;6
			db 44,45,46,51,52,53 ;6
			;cx 270
			
	whitey	db 0,0
			db 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
			db 2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
			db 3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3
			db 4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4
			db 5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
			db 6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6
			db 7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
			db 8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8
			db 9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9
			db 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
			db 11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11
			db 12,12,12,12,12,12
			db 13,13,13,13,13,13
			
.code

	start:

	main:

		mov ax,	@DATA
		mov ds,	ax
		
		mov ax,	0
		
		mov bh, 0		;page no. (int 10H)
		
		mov al, 219		;char to display (int 10H)
		
		call backg
		
		call brownn
		
		call whitee
		
		call blkk
		
		

		int 20h
		
	; > end of program
	
	backg:
		mov cx, 24	;counter 
		mov bl, 09H ;color 
		mov dh, 0	;row
		
	back:	
		mov dl, 0	;column 
		mov ah, 2	;set pos 
		int 10h
		
		push cx		;set keystrokes
		
		mov ah, 9	 ;write char (int 10H)	
		mov cx, 80	 ;no. of keystroke (ah 9: int 10H)
		int 10h
		
		pop cx		  ;return loop value
		
		inc dh
		
		loop back
		
		ret
		
	blkk:

		mov bl, 00h			
		mov cx, 108
		
		mov si, offset blacky
		mov di, offset blackx
	
	blk:		
		mov dh, [si]
		add dh, 9
		
		mov dl, [di]	
		add dl, 20
		
		mov ah, 2
		int 10h
		
		push cx
		mov ah, 9
		mov cx, 1
		int 10h
		
		pop cx
		
		inc dh
		inc si
		inc di
		
		loop blk
		ret
		
    whitee:

		mov bl, 0Fh			
		mov cx, 270
		
		mov si, offset whitey
		mov di, offset whitex
	
	white:		
		mov dh, [si]
		add dh, 9
		
		mov dl, [di]
		add dl, 20		
		mov ah, 2
		int 10h
		
		push cx
		mov ah, 9
		mov cx, 1
		int 10h
		
		pop cx
		
		inc dh
		inc si
		inc di
		
		loop white
		ret
		
	brownn:

		mov bl, 22h			
		mov cx, 170
		
		mov si, offset browny
		mov di, offset brownx
	
	brown:		
		mov dh, [si]
		add dh, 9
		
		mov dl, [di]
		add dl, 20
		mov ah, 2
		int 10h
		
		push cx
		mov ah, 9
		mov cx, 1
		int 10h
		
		pop cx
		
		inc dh
		inc si
		inc di
		
		loop brown
		ret

end		start